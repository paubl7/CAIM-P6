Smart Cities are developing in parallel with the global trend towards urbanization. The ultimate
goal of Smart City projects is to deliver a positive impact for the citizens and the socio-economic
and ecological environment. This involves the challenge to derive concrete requirements for (technical)
projects from overarching concepts like Quality of Life (QoL) and Subjective Well-Being (SWB).
Linking long-term, impact oriented goals with project outputs and outcomes is a complex problem.
Decision making on requirements and resulting features of single Smart City projects (or systems)
is even more complex since cities are not like monolithic, hierarchical and well structured systems.
Nevertheless, systems engineering provides concepts which support decision making in such situations.
Complex socio-technical systems such as smart cities can be characterized as systems of systems
(SoS). A SoS is composed of independently developed systems that nevertheless provide a higher-level
integrated functionality. To add new functionality to a SoS, either existing systems must be extended
or new systems must be developed and integrated. In both cases, the extension of functionality is
usually done in small increments and structured via software releases. However, the decision which
features to include in the next release is complex and difficult to manage when done manually. To
address this, we make use of the multi-objective next release problem (MONRP) to search for an optimal
set of features for a software release in a SoS context. In order to refine the search in an early planning
phase, we propose a technique to model and validate the features using the scenario modeling language
for Kotlin (SMLK). This is demonstrated with a proof-of-concept implementation. 