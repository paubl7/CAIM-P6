Recent work has shown that adversarial Windows malware samples - referred to as adversarial EXEmples
in this paper - can bypass machine learning-based detection relying on static code analysis by perturbing
relatively few input bytes. To preserve malicious functionality, previous attacks either add
bytes to existing non-functional areas of the file, potentially limiting their effectiveness,
or require running computationally-demanding validation steps to discard malware variants that
do not correctly execute in sandbox environments. In this work, we overcome these limitations by
developing a unifying framework that does not only encompass and generalize previous attacks against
machine-learning models, but also includes three novel attacks based on practical, functionality-preserving
manipulations to the Windows Portable Executable (PE) file format. These attacks, named Full DOS,
Extend and Shift, inject the adversarial payload by respectively manipulating the DOS header,
extending it, and shifting the content of the first section. Our experimental results show that
these attacks outperform existing ones in both white-box and black-box scenarios, achieving a
better trade-off in terms of evasion rate and size of the injected payload, while also enabling evasion
of models that have been shown to be robust to previous attacks. To facilitate reproducibility of
our findings, we open source our framework and all the corresponding attack implementations as
part of the secml-malware Python library. We conclude this work by discussing the limitations of
current machine learning-based malware detectors, along with potential mitigation strategies
based on embedding domain knowledge coming from subject-matter experts directly into the learning
process. 