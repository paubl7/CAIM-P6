Graph mining applications try to find all embeddings that match specific patterns. Compared to
the traditional graph computation, graph mining applications are computation intensive. The
state-of-the-art method, pattern enumeration, specifically constructs the embeddings that
satisfy the pattern, leading to significant speedups over the exhaustive check method. However,
the key operation intersection poses challenges to conventional architectures and takes substantial
execution time. In this paper, we propose IntersectX, a vertical approach to accelerate graph mining
with stream instruction set extension and architectural supports based on conventional processor.
The stream based ISA can considered as a natural extension to the traditional instructions for ordinary
scalar values. We develop the IntersectX architecture composed of specialized mechanisms that
efficiently implement the stream ISA extensions, including: (1) Stream Mapping Table (SMT) that
records the mapping between stream ID and stream register; (2) the Stream Cache(S-Cache) that enables
efficient stream data movements; (3) tracking the dependency between streams with a property of
intersection; (4) Stream Value Processing Unit (SVPU) that implements sparse value computations;
and (5) the nested intersection translator that generates micro-op sequences for implementing
nested intersections. We implement IntersectX ISA and architecture on zsim. We use 7 popular graph
mining applications (triangle/three-chain/tailed-traingle counting, 3-motif mining, 4/5-clique
counting, and FSM) on 10 real graphs. Our experiments show that IntersectX significantly outperforms
our CPU baseline and GRAMER, a state-of-the-art graph mining accelerator. IntersectX's speedups
over the CPU baseline and GRAMER are on average 10.7x and 40.1x(up to 83.9x and 181.8x), respectively.
