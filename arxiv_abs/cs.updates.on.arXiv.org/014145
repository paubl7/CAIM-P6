Population-based methods can cope with a variety of different problems, including problems of
remarkably higher complexity than those traditional methods can handle. The main procedure consists
of successively updating a population of candidate solutions, performing a parallel exploration
instead of traditional sequential exploration. While the origins of the PSO method are linked to
bird flock simulations, it is a stochastic optimization method in the sense that it relies on random
coefficients to introduce creativity, and a bottom-up artificial intelligence-based approach
in the sense that its intelligent behaviour emerges in a higher level than the individuals' rather
than deterministically programmed. As opposed to EAs, the PSO involves no operator design and few
coefficients to be tuned. Since this paper does not intend to study such tuning, general-purpose
settings are taken from previous studies. The PSO algorithm requires the incorporation of some
technique to handle constraints. A popular one is the penalization method, which turns the original
constrained problem into unconstrained by penalizing infeasible solutions. Other techniques
can be specifically designed for PSO. Since these strategies present advantages and disadvantages
when compared to one another, there is no obvious best constraint-handling technique (CHT) for
all problems. The aim here is to develop and compare different CHTs suitable for PSOs, which are incorporated
to an algorithm with general-purpose settings. The comparisons are performed keeping the remaining
features of the algorithm the same, while comparisons to other authors' results are offered as a
frame of reference for the optimizer as a whole. Thus, the penalization, preserving feasibility
and bisection methods are discussed, implemented, and tested on two suites of benchmark problems.
Three neighbourhood sizes are also considered in the experiments. 