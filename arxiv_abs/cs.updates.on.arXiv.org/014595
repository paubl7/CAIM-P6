We introduce a new formalisation of languages, called keyboards. We consider a set of elementary
operations (writing/erasing a letter, going to the right or to the left,...) and we define a keyboard
as a set of finite sequences of such operations, called keys. The corresponding language is the set
of words obtained by applying some sequence of those keys. Unlike classical models of computation,
every key can be applied anytime. We define various classes of languages based on different sets
of elementary operations, and compare their expressive powers. We also compare them to well-known
classes of languages (Chomsky hierarchy). We obtain a strict hierarchy of languages, whose expressivity
is orthogonal to the one of the aforementionned classical models. -- Nous introduisons une nouvelle
repr\'esentation de langages, les claviers. On se munit d'un ensemble d'op\'erations \'el\'ementaires
(ajout, effacement d'une lettre, d\'eplacement \`a droite, \`a gauche, ...), et on d\'efinit un
clavier comme un ensemble de suites finies d'op\'erations \'el\'ementaires, appel\'ees touches.
Son langage sera l'ensemble des mots obtenus en appliquant une suite quelconque de touches. Contrairement
\`a des mod\`eles de calcul classiques, toutes les touches peuvent \^etre appliqu\'ees \`a tout
moment. En premier lieu nous d\'efinissons diff\'erentes classes de claviers en faisant varier
l'ensemble des op\'erations \'el\'ementaires autoris\'ees, et nous comparons l'expressivit\'e
des classes de langages obtenues. Nous comparons \'egalement ces classes \`a la hi\'erarchie de
Chomsky. Nous obtenons que toutes les classes \'etudi\'ees sont diff\'erentes, et nous caract\'erisons
les classes inclues dans les rationnels et les alg\'ebriques. L'expressivit\'e des claviers semble
orthogonale \`a celle des mod\`eles \'evoqu\'es pr\'ec\'edemment. 