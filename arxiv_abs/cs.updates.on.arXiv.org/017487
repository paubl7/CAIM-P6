This thesis introduces the "method of structural refinement", which serves as a means of transforming
the relational semantics of a modal and/or constructive logic into an 'economical' proof system
by connecting two proof-theoretic paradigms: labelled and nested sequent calculi. The formalism
of labelled sequents has been successful in that cut-free calculi in possession of desirable proof-theoretic
properties can be automatically generated for large classes of logics. Despite these qualities,
labelled systems make use of a complicated syntax that explicitly incorporates the semantics of
the associated logic, and such systems typically violate the subformula property to a high degree.
By contrast, nested sequent calculi employ a simpler syntax and adhere to a strict reading of the
subformula property, making such systems useful in the design of automated reasoning algorithms.
However, the downside of the nested sequent paradigm is that a general theory concerning the automated
construction of such calculi (as in the labelled setting) is essentially absent, meaning that the
construction of nested systems and the confirmation of their properties is usually done on a case-by-case
basis. The refinement method connects both paradigms in a fruitful way, by transforming labelled
systems into nested (or, refined labelled) systems with the properties of the former preserved
throughout the transformation process. To demonstrate the method of refinement and some of its
applications, we consider grammar logics, first-order intuitionistic logics, and deontic STIT
logics. The introduced refined labelled calculi will be used to provide the first proof-search
algorithms for deontic STIT logics. Furthermore, we employ our refined labelled calculi for grammar
logics to show that every logic in the class possesses the effective Lyndon interpolation property.
