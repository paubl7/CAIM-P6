Finding a maximum independent set is a fundamental NP-hard problem. Given an unweighted graph,
this problem asks for a maximum cardinality set of pairwise non-adjacent vertices. Some of the most
successful algorithms for solving this problem use the branch-and-bound or branch-and-reduce
paradigms. Results on branch-and-reduce algorithms were to a large part achieved by developing
new, more practical reduction rules. However, other components that have been shown to have a significant
impact on the performance of these algorithms have not received as much attention. One of these is
the branching strategy, which determines what vertex is included or excluded in a potential solution.
Even now, the most commonly used strategy selects vertices solely based on their degree and does
not take into account other factors that contribute to the performance of the algorithm. In this
work, we develop and evaluate several novel branching strategies for both branch-and-bound and
branch-and-reduce algorithms. Our strategies are based on one of two approaches which are motivated
by existing research. They either (1) aim to decompose the graph into two or more connected components
which can then be solved independently, or (2) try to remove vertices that hinder the application
of a reduction rule which can lead to smaller graphs. Our experimental evaluation on a large set of
real-world instances indicates that our strategies are able to improve the performance of the state-of-the-art
branch-and-reduce algorithm by Akiba and Iwata. To be more specific, we are able to compute a solution
faster than the default branching strategy of selecting a vertex of highest degree on 90% of all instances
tested. Furthermore, our decomposition-based strategies are able to achieve a speedup of 90% on
sparse networks (33% on all instances). 