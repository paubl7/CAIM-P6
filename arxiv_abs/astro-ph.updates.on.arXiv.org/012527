We present the implementation of updated stellar evolution recipes in the codes Nbody6++GPU, MOCCA
and McLuster. We test them through numerical simulations of star clusters containing $1.1\times
10^5$ stars (with $2.0\times 10^4$ in primordial hard binaries) performing high-resolution direct
N-body (Nbody6++GPU) and Monte-Carlo (MOCCA) simulations to an age of 10 Gyr. We compare the output
of such simulations for varying prescriptions for the treatment of supernovae (delayed and rapid
core-collapse mechanisms), and for variations in the assumed initial mass ratio distribution
of stellar binaries. Furthermore, the Nbody6++GPU simulations have white dwarf (WD) kicks enabled.
Compared to Nbody6++GPU, the MOCCA models appear to be denser, with a larger scatter in the remnant
masses, and a lower binary fraction on average. The MOCCA models produce more black holes and Helium
WDs, whilst Nbody6++GPU models are characterised by a much larger amount of WD-WD binaries. The
remnant kick velocity and escape speed distributions are very similar and some neutron stars (NSs)
formed via electron-capture supernovae (ECSNe), accretion-induced collapse (AIC) or merger-induced
collapse (MIC) escape the cluster in all simulations. To provide a reference point for future usage
of the code we categorise the stellar evolution recipes available in Nbody6++GPU into different
levels: prescriptions that are largely outdated (level A), up-to-date (level B) prescriptions,
and those that are still undergoing a testing phase (level C) and those that will be added in the next
iteration of stellar evolution updates (level D). We also provide comparative tables to facilitate
future comparison between Nbody6++GPU and MOCCA simulations. We also present the implementation
of the new stellar evolution recipes in the McLuster code, discussing how this can be used as a population
synthesis tool for single and binary stars. 