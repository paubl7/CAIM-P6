Kolmogorov's representation theorem provides a framework for decomposing any arbitrary real-valued,
multivariate, and continuous function into a two-layer nested superposition of a finite number
of functions. The functions at these two layers, are referred to as the inner and outer functions
with the key property that the design of the inner functions is independent of that of the original
function of interest to be computed. This brings modularity and universality to the design of the
inner function, and subsequently, a part of computation. This paper capitalizes on such modularity
and universality in functional representation to propose two frameworks for distributed computation
over the additive multiple access channels (MACs). In the first framework, each source encodes
the inner representations and sends them over the additive MAC. Subsequently, the receiver computes
the outer functions to compute the function of interest. Transmitting the values of the inner functions
instead of the messages directly leads to compression gains. In the second approach, in order to
further increase the compression rate, the framework aims to also bring computing the outer functions
to the source sites. Specifically, each source employs a graph-coloring-based approach to perform
joint functional compression of the inner and the outer functions, which may attain further compression
savings over the former. These modular encoding schemes provide an exact representation in the
asymptotic regime and the non-asymptotic regime. Contrasting these with the baseline model where
sources directly transmit data over MAC, we observe gains. To showcase the gains of these two frameworks
and their discrepancies, they are applied to a number of commonly used computations in distributed
systems, e.g., computing products, $\ell_m$-norms, polynomial functions, extremum values of
functions, and affine transformations. 