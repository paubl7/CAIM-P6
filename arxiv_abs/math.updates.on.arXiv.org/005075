P(n^2+1) denotes the set of primes of the form n^2+1. f(1)=2, f(2)=4, f(n+1)=f(n)! for every n \geq
2. \Phi denotes the implication: card(P(n^2+1))< \omega ==> P(n^2+1) \subseteq [2,f(7)]. B={x_i!=x_k:
i,k \in {1,...,9}} \cup {x_i \cdot x_j=x_k: i,j,k \in {1,...,9}}. Some system U \subseteq B has exactly
two solutions in positive integers, namely (1,...,1) and (f(1),...,f(9)). \Psi denotes the statement:
if a system S \subseteq B has at most finitely many solutions in positive integers x_1,...,x_9, then
each such solution (x_1,...,x_9) satisfies x_1,...,x_9 \leq f(9). The statement \Psi restricted
to some system A \subseteq B is equivalent to the statement \Phi. Open Problem: Is there a set X \subseteq
N that satisfies conditions (1)-(5)? (1) There are a large number of elements of X and it is conjectured
that X is infinite. (2) No known algorithm decides the finiteness/infiniteness of X. (3) There is
a known algorithm that for every k \in N decides whether or not k \in X. (4) There is an explicitly known
integer n such that card(X)<\omega ==> X \subseteq [0,n]. (5) X is simply defined and we know an algorithm
such that for every input k \in N it returns the sentence "k \in X" or the sentence "k \not\in X" and every
returned sentence is true when k is sufficiently large. The simplest (in the sense of a verbal description)
known to us such algorithm may return a false sentence only if k is small. We prove: the set X={k \in
N: (f(7)<k) ==>(f(7),k) \cap P(n^2+1) \neq \emptyset} satisfies conditions (1)-(4); the set X=P(n^2+1)
satisfies conditions (1)-(3) and (5); the statement \Phi implies that the set X=P(n^2+1) satisfies
condition (4); no set X \subseteq N will satisfy conditions (1)-(4) forever, if for every positive
integers b and s, at some future day, machine computations will be possible on every integers from
the interval [-b,b] and this will be possible with the speed of s FLOPS. 