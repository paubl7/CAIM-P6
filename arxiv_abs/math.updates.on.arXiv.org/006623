The set P(n2+1) of primes of the form n^2+1 is conjecturally infinite. f(1)=2, f(2)=4, f(n+1)=f(n)!
for n in {2,3,4,...}. F denotes the statement: card(P(n2+1))<omega => P(n2+1) subset [2,f(7)].
B={x_i!=x_k: i,k in {1,...,9}} cup {x_i cdot x_j=x_k: i,j,k in {1,...,9}}. We write some systems
U,A subset B. The system U has exactly two solutions in (N\{0})^9: (1,...,1) and (f(1),...,f(9)).
No known system S subset B with a finite number of solutions in positive integers x_1,...,x_9 has
a solution (x_1,...,x_9) in (N\{0})^9 satisfying max(x_1,...,x_9)>f(9). F is equivalent to the
following statement L: if at most finitely many tuples (x_1,...,x_9) in (N\{0})^9 solve A, then
they satisfy x_1,...,x_9 leq f(9). We explain the distinction between existing algorithms (i.e.
algorithms whose existence is provable in ZFC) and known algorithms (i.e. algorithms whose definition
is constructive and currently known to us). We explain which elements of a set X subset N are classified
as known. No known set X subset N satisfies conditions (1)-(4) and is widely known in number theory
or naturally defined. (1) A known algorithm with no input returns an integer n satisfying card(X)<omega
=> X subset (-infty,n]. (2) A known algorithm for every k in N decides whether or not k in X. (3) No known
algorithm with no input returns the logical value of the statement card(X)=omega. (4) There are
many elements of X and it is conjectured that X is infinite. (5) X has the simplest definition among
known sets Y subset N with the same set of known elements. Conditions (2)-(5) hold for X=P(n2+1),
condition (1) holds assuming L. Conditions (1)-(4) hold for X={k in N: (10^6<k)=> (f(10^6),f(k))
cap P(n2+1) neq emptyset}, condition (5) fails. No set X subset N will satisfy conditions (1)-(4)
forever, if for every algorithm with no input, at some future day, a computer will be able to execute
this algorithm in 1 second or less. 