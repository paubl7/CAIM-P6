The definition of factor space and a unified optimization based classification model were developed
for linear programming. Intelligent behaviour appeared in a decision process can be treated as
a point y, the dynamic state observed and controlled by the agent, moving in a factor space impelled
by the goal factor and blocked by the constraint factors. Suppose that the feasible region is cut
by a group of hyperplanes, when point y reaches the region's wall, a hyperplane will block the moving
and the agent needs to adjust the moving direction such that the target is pursued as faithful as possible.
Since the wall is not able to be represented to a differentiable function, the gradient method cannot
be applied to describe the adjusting process. We, therefore, suggest a new model, named linear adjusting
programming (LAP) in this paper. LAP is similar as a kind of relaxed linear programming (LP), and
the difference between LP and LAP is: the former aims to find out the ultimate optimal point, while
the latter just does a direct action in short period. You may ask: Where will a blocker encounter?
How can the moving direction be adjusted? Where further blockers may be encountered next, and how
should the direction be adjusted again? We request at least an adjusting should be achieved at the
first time. If a hyperplane blocks y going ahead along with the direction d, then we must adjust the
new direction d' as the projection of g in the blocking plane. If there is only one blocker at a time,
it is straightforward to calculate the projection, but how to calculate the projection when there
are more than one blocker encountered simultaneously? We suggest a projection calculation by means
of the Hat matrix in this paper. Linear adjusting programming will attract interest in many fields.
It might bring a new light to solve the linear programming problem with a strong polynomial solution.
